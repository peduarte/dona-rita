<div class="section product-section">
	<div class="grid">
		<div class="col sm-11 sm-push-1 md-6 md-push-0 lg-5 lg-push-1">
			<img src="{{ site.url }}/images/product.png" />
		</div>

		<div class="col fluid md-6 lg-5">
			<h1 style="margin-top: 0;">Bake-at-home frozen pack.</h1>
			<h3 class="color-salmon1">15 cheesy balls â€“ Â£5.</h3>

			<div class="postcode" id="postcode-holder">
				<p class="small">We're a small family business and we're currently handling the deliveries ourselves. For this reason we only deliver in certain postcodes. Enter your postcode below and let's hope we can deliver to you.</p>
				<input type="text" id="postcode" placeholder="EG: E3 3AF" />
				<button type="button" id="postCodeButton">Check</button>
				<div class="postcode-message postcode-nope">
					{% include delivery-interest-form.liquid %}
				</div>
				<p class="postcode-message postcode-wrong">Please enter a valid postcode.</p>
			</div>


			<div id="product-holder" style="display: none;">
				<p class="small delivery-date">
					{% include svg/calendar.svg %}
					Delivery date: {{ site.deliveryDate }}
				</p>
				<!-- <p class="small">Next available delivery date will be Sunday 30th July.<br> You can choose one from the following timeslots: morning (9am - 12pm), afternoon (12pm - 5pm) and evening (5pm - 8pm).</p> -->
				<div id="product-inject"></div>
			</div>
			<p class="postcode-message message-qty">The minimum order quantity is 2.</p>
		</div>
	</div>
</div>

<script type="text/javascript">
/*<![CDATA[*/
(function () {

	var productHolder = document.getElementById('product-holder');
	var postCodeHolder = document.getElementById('postcode-holder');

	/* START POST CODE VALIDATOR */
	var allowedPostCodes = ["E1", "E11", "E12", "E14", "E15", "E16", "E1W", "E2", "E20", "E3", "E5", "E6", "E7", "E8", "E9", "E98", "EC1", "EC1A", "EC1M", "EC1N", "EC1P", "EC1R", "EC1V", "EC1Y", "EC2", "EC2A", "EC2M", "EC2N", "EC2P", "EC2R", "EC2V", "EC2Y", "EC3", "EC3A", "EC3M", "EC3N", "EC3P", "EC3R", "EC3V", "EC4", "EC4A", "EC4M", "EC4N", "EC4P", "EC4R", "EC4V", "EC4Y", "EC50", "N1", "N16", "N1P", "N5", "N6", "E18", "IG2", "IG7", "IG8", "IG9", "IG10"];
	var postCodeInput = document.getElementById('postcode');

	var xhr = new XMLHttpRequest();

	function validatePostCode(postcode, callback) {
		xhr.open('GET', 'https://api.postcodes.io/postcodes/' + postcode);
		xhr.send(null);
		xhr.onreadystatechange = function() {
			var DONE = 4;
			var OK = 200;
			if (xhr.readyState === DONE) {
				if (xhr.status === OK) {
					callback(JSON.parse(xhr.response));
				} else {
					callback(new Error('Error: ' + xhr.status));
				}
			}
		}
	}

	var postCodeUndelieverable = document.querySelector('.postcode-nope');
	var postCodeInvalid = document.querySelector('.postcode-wrong');
	var orderQtyInvalid = document.querySelector('.message-qty');

	postCodeButton.addEventListener('click', function() {
		var inputPostCode = postCodeInput.value;
		validatePostCode(inputPostCode, function(response) {
			if (response.status === 200) {
				var postcode = response.result.postcode;
				var outcode = response.result.outcode;
				if (allowedPostCodes.indexOf(outcode) > -1) {
					productHolder.style.display = 'block';
					postCodeHolder.style.display = 'none';

					// Only send GA Event if it's not my postcode
					if (postcode !== 'E3 3AF') {
						ga('send', 'event', 'Postcode', 'deliverable', outcode);
					}
				} else {
					postCodeUndelieverable.style.display = 'block';
					postCodeInvalid.style.display = 'none';
					document.getElementById('mce-POSTCODE').value = postcode;
					document.getElementById('mce-OUTCODE').value = outcode;
					ga('send', 'event', 'Postcode', 'undeliverable', outcode);
				}
			} else {
				postCodeUndelieverable.style.display = 'none';
				postCodeInvalid.style.display = 'block';
				throw new Error('Postcode not valid ' + response)
			}
		});
	});

	// Close the sign up form when user has voted
	document.getElementById('delivery-form-button').addEventListener('click', function() {
		postCodeUndelieverable.style.display = 'none';
	});


	/* END POST CODE VALIDATOR */

	/* START CUSTOM HACKS ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’© */
	var Product;
	var buyButton;
	var qtyInput;
	var variantSelect;

	function applyHacks(component) {
		Product.selectedQuantity = 2;

		buyButton = component.node.querySelector('.shopify-buy__btn');
		qtyInput =  component.node.querySelector('.shopify-buy__quantity');
		variantSelect = component.node.querySelector('.shopify-buy__option-select__select');

		buyButton.setAttribute('disabled', 'disabled');

		qtyInput.addEventListener('change', onInputChange)
		qtyInput.addEventListener('blur', onInputChange)
		qtyInput.addEventListener('keyup', onInputChange)

		// Uncomment to show variants
		// setTimeout(function() {
		// 	var option = document.createElement("option");
		// 	option.text = "Delivery slot";
		// 	option.setAttribute('disabled', 'disabled');
		// 	option.setAttribute('selected', 'selected');
		// 	variantSelect.appendChild(option);
		// }, 0)
	}

	function validateQuantity(component) {
		if (Product.selectedQuantity < 2) {
			Product.selectedQuantity = 2;
		}
	}

	function onInputChange(event) {
		if (Number(event.target.value) >= 2) {
			buyButton.removeAttribute('disabled');
			orderQtyInvalid.style.display = 'none';
		} else {
			buyButton.setAttribute('disabled', 'disabled');
			orderQtyInvalid.style.display = 'block';
		}
	}
	/* END CUSTOM HACKS ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’© */


	var scriptURL = 'https://sdks.shopifycdn.com/buy-button/latest/buy-button-storefront.min.js';

	if (window.ShopifyBuy) {
		if (window.ShopifyBuy.UI) {
			ShopifyBuyInit();
		} else {
			loadScript();
		}
	} else {
		loadScript();
	}

	function loadScript() {
		var script = document.createElement('script');
		script.async = true;
		script.src = scriptURL;
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(script);
		script.onload = ShopifyBuyInit;
	}

	function ShopifyBuyInit() {
		var client = ShopifyBuy.buildClient({
			domain: 'dona-rita.myshopify.com',
			apiKey: '260e658ec8cdc689ca1342a79adba733',
			appId: '6',
		});

		var componentOptions = {
			"product": {
				"iframe": false,
				"buttonDestination": "directCheckout",
				"variantId": "all",
				"width": "240px",
				"contents": {
					"img": false,
					"title": false,
					"price": false,
					"description": false,
					"button": true,
					"quantity": true,
					"options": false // Hide variants
				},
				"text": {
					"button": "Buy me"
				},
				"events": {
					"afterInit": applyHacks,
					"afterRender": validateQuantity
				}
			},
			"cart": {
				"popup": false
			}
		};

		ShopifyBuy.UI.onReady(client).then(function(ui) {
			ui.createComponent('product', {
				id: [9367035273],
				node: document.getElementById('product-inject'),
				moneyFormat: '%C2%A3%7B%7Bamount%7D%7D',
				options: componentOptions,
			});
			Product = ui.components.product[0];
		});
	}
})();
/*]]>*/
</script>
